// Mocks generated by Mockito 5.3.0 from annotations
// in cool_template/modules/jhipster_auth/services/jhipster_auth_services.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cool_template/models/user.dart' as _i4;
import 'package:cool_template/modules/jhipster_auth/services/jhipster_auth_services.dart'
    as _i5;
import 'package:cool_template/network/network_client.dart' as _i2;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkClient_0 extends _i1.SmartFake implements _i2.NetworkClient {
  _FakeNetworkClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFlutterSecureStorage_1 extends _i1.SmartFake
    implements _i3.FlutterSecureStorage {
  _FakeFlutterSecureStorage_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeJhipsterAccountInfo_2 extends _i1.SmartFake
    implements _i4.JhipsterAccountInfo {
  _FakeJhipsterAccountInfo_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [JhipsterAuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJhipsterAuthService extends _i1.Mock
    implements _i5.JhipsterAuthService {
  MockJhipsterAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NetworkClient get networkClient =>
      (super.noSuchMethod(Invocation.getter(#networkClient),
              returnValue:
                  _FakeNetworkClient_0(this, Invocation.getter(#networkClient)))
          as _i2.NetworkClient);
  @override
  _i3.FlutterSecureStorage get secureStorage =>
      (super.noSuchMethod(Invocation.getter(#secureStorage),
              returnValue: _FakeFlutterSecureStorage_1(
                  this, Invocation.getter(#secureStorage)))
          as _i3.FlutterSecureStorage);
  @override
  _i6.Future<bool> login(_i4.JhipsterLoginUser? user) =>
      (super.noSuchMethod(Invocation.method(#login, [user]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<bool> register(_i4.JhipsterRegisterUser? user) =>
      (super.noSuchMethod(Invocation.method(#register, [user]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<bool> resetPasswordInit(String? email) =>
      (super.noSuchMethod(Invocation.method(#resetPasswordInit, [email]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<bool> resetPasswordFinish(_i4.JhipsterResetCode? resetCode) =>
      (super.noSuchMethod(Invocation.method(#resetPasswordFinish, [resetCode]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i4.JhipsterAccountInfo> getAccountInfo() => (super.noSuchMethod(
          Invocation.method(#getAccountInfo, []),
          returnValue: _i6.Future<_i4.JhipsterAccountInfo>.value(
              _FakeJhipsterAccountInfo_2(
                  this, Invocation.method(#getAccountInfo, []))))
      as _i6.Future<_i4.JhipsterAccountInfo>);
}
